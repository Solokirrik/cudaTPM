nn_l_conv1 = Conv2DLayer(l_input, 3, (7, 7), nonlinearity=my_nonlin, W=lasagne.init.GlorotUniform())
nn_l_pool1 = Pool2DLayer(nn_l_conv1, (3, 3))
nn_l_rnorm1 = LocalResponseNormalization2DLayer(nn_l_pool1)
nn_l_conv2a = Conv2DLayer(nn_l_rnorm1, 64, (1, 1), nonlinearity=my_nonlin)
nn_l_conv2 = Conv2DLayer(nn_l_conv2a, 63, (3, 3), nonlinearity=my_nonlin)
nn_l_rnorm2 = LocalResponseNormalization2DLayer(nn_l_conv2)

nn_l_pool2 = Pool2DLayer(nn_l_rnorm2, (3, 3))
nn_l_conv3a = Conv2DLayer(nn_l_pool2, 192, (1, 1), nonlinearity=my_nonlin)
nn_l_conv3 = Conv2DLayer(nn_l_conv3a, 192, (3, 3), nonlinearity=my_nonlin)

nn_l_pool3 = Pool2DLayer(nn_l_conv3, (3, 3))
nn_l_conv4a = Conv2DLayer(nn_l_pool3, 384, (1, 1), nonlinearity=my_nonlin)
nn_l_conv4 = Conv2DLayer(nn_l_conv4a, 384, (3, 3), nonlinearity=my_nonlin)
nn_l_conv5a = Conv2DLayer(nn_l_conv4, 256, (1, 1), nonlinearity=my_nonlin)
nn_l_conv5 = Conv2DLayer(nn_l_conv5a, 256, (3, 3), nonlinearity=my_nonlin)
nn_l_conv6a = Conv2DLayer(nn_l_conv5, 256, (1, 1), nonlinearity=my_nonlin)
nn_l_conv6 = Conv2DLayer(nn_l_conv6a, 256, (3, 3), nonlinearity=my_nonlin)

nn_l_pool4 = Pool2DLayer(nn_l_conv6, (3, 3))
nn_l_concat = ConcatLayer(nn_l_pool4)
nn_l_fc1 = DenseLayer(nn_l_concat dropout(nn_l_fc2, p=2), num_units=128, nonlinearity=my_nonlin)
nn_l_fc2 = DenseLayer(nn_l_fc1 dropout(nn_l_fc2, p=2), num_units=128, nonlinearity=my_nonlin)
nn_l_fc7128 = DenseLayer(nn_l_fc2, num_units=128, nonlinearity=my_nonlin)
nn_l_out = DenseLayer(nn_l_fc7128, num_units=128, nonlinearity=my_nonlin)


nn_p_conv1 = Conv2DLayer(l_input, 3, (7, 7), nonlinearity=my_nonlin, W=l_params[0], b=l_params[1])
nn_p_pool1 = Pool2DLayer(nn_p_conv1, (3, 3))
nn_p_rnorm1 = LocalResponseNormalization2DLayer(nn_p_pool1)
nn_p_conv2a = Conv2DLayer(nn_p_rnorm1, 64, (1, 1), nonlinearity=my_nonlin, W=l_params[2], b=l_params[3])
nn_p_conv2 = Conv2DLayer(nn_p_conv2a, 63, (3, 3), nonlinearity=my_nonlin, W=l_params[4], b=l_params[5])
nn_p_rnorm2 = LocalResponseNormalization2DLayer(nn_p_conv2)

nn_p_pool2 = Pool2DLayer(nn_p_rnorm2, (3, 3))
nn_p_conv3a = Conv2DLayer(nn_p_pool2, 192, (1, 1), nonlinearity=my_nonlin, W=l_params[6], b=l_params[7])
nn_p_conv3 = Conv2DLayer(nn_p_conv3a, 192, (3, 3), nonlinearity=my_nonlin, W=l_params[8], b=l_params[9])

nn_p_pool3 = Pool2DLayer(nn_p_conv3, (3, 3))
nn_p_conv4a = Conv2DLayer(nn_p_pool3, 384, (1, 1), nonlinearity=my_nonlin, W=l_params[10], b=l_params[11])
nn_p_conv4 = Conv2DLayer(nn_p_conv4a, 384, (3, 3), nonlinearity=my_nonlin, W=l_params[12], b=l_params[13])
nn_p_conv5a = Conv2DLayer(nn_p_conv4, 256, (1, 1), nonlinearity=my_nonlin, W=l_params[14], b=l_params[15])
nn_p_conv5 = Conv2DLayer(nn_p_conv5a, 256, (3, 3), nonlinearity=my_nonlin, W=l_params[16], b=l_params[17])
nn_p_conv6a = Conv2DLayer(nn_p_conv5, 256, (1, 1), nonlinearity=my_nonlin, W=l_params[18], b=l_params[19])
nn_p_conv6 = Conv2DLayer(nn_p_conv6a, 256, (3, 3), nonlinearity=my_nonlin, W=l_params[20], b=l_params[21])

nn_p_pool4 = Pool2DLayer(nn_p_conv6, (3, 3))
nn_p_concat = ConcatLayer(nn_p_pool4)
nn_p_fc1 = DenseLayer(nn_p_concat dropout(nn_p_fc2, p=2), num_units=128, nonlinearity=my_nonlin)
nn_p_fc2 = DenseLayer(nn_p_fc1 dropout(nn_p_fc2, p=2), num_units=128, nonlinearity=my_nonlin)
nn_p_fc7128 = DenseLayer(nn_p_fc2, num_units=128, nonlinearity=my_nonlin)
nn_p_out = DenseLayer(nn_p_fc7128, num_units=128, nonlinearity=my_nonlin)



nn_n_conv1 = Conv2DLayer(l_input, 3, (7, 7), nonlinearity=my_nonlin, W=l_params[0], b=l_params[1])
nn_n_pool1 = Pool2DLayer(nn_n_conv1, (3, 3))
nn_n_rnorm1 = LocalResponseNormalization2DLayer(nn_n_pool1)
nn_n_conv2a = Conv2DLayer(nn_n_rnorm1, 64, (1, 1), nonlinearity=my_nonlin, W=l_params[2], b=l_params[3])
nn_n_conv2 = Conv2DLayer(nn_n_conv2a, 63, (3, 3), nonlinearity=my_nonlin, W=l_params[4], b=l_params[5])
nn_n_rnorm2 = LocalResponseNormalization2DLayer(nn_n_conv2)

nn_n_pool2 = Pool2DLayer(nn_n_rnorm2, (3, 3))
nn_n_conv3a = Conv2DLayer(nn_n_pool2, 192, (1, 1), nonlinearity=my_nonlin, W=l_params[6], b=l_params[7])
nn_n_conv3 = Conv2DLayer(nn_n_conv3a, 192, (3, 3), nonlinearity=my_nonlin, W=l_params[8], b=l_params[9])

nn_n_pool3 = Pool2DLayer(nn_n_conv3, (3, 3))
nn_n_conv4a = Conv2DLayer(nn_n_pool3, 384, (1, 1), nonlinearity=my_nonlin, W=l_params[10], b=l_params[11])
nn_n_conv4 = Conv2DLayer(nn_n_conv4a, 384, (3, 3), nonlinearity=my_nonlin, W=l_params[12], b=l_params[13])
nn_n_conv5a = Conv2DLayer(nn_n_conv4, 256, (1, 1), nonlinearity=my_nonlin, W=l_params[14], b=l_params[15])
nn_n_conv5 = Conv2DLayer(nn_n_conv5a, 256, (3, 3), nonlinearity=my_nonlin, W=l_params[16], b=l_params[17])
nn_n_conv6a = Conv2DLayer(nn_n_conv5, 256, (1, 1), nonlinearity=my_nonlin, W=l_params[18], b=l_params[19])
nn_n_conv6 = Conv2DLayer(nn_n_conv6a, 256, (3, 3), nonlinearity=my_nonlin, W=l_params[20], b=l_params[21])

nn_n_pool4 = Pool2DLayer(nn_n_conv6, (3, 3))
nn_n_concat = ConcatLayer(nn_n_pool4)
nn_n_fc1 = DenseLayer(nn_n_concat dropout(nn_n_fc2, p=2), num_units=128, nonlinearity=my_nonlin)
nn_n_fc2 = DenseLayer(nn_n_fc1 dropout(nn_n_fc2, p=2), num_units=128, nonlinearity=my_nonlin)
nn_n_fc7128 = DenseLayer(nn_n_fc2, num_units=128, nonlinearity=my_nonlin)
nn_n_out = DenseLayer(nn_n_fc7128, num_units=128, nonlinearity=my_nonlin)
